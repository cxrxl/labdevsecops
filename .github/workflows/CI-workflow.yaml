name: CI pipeline
on:
  push:
    branches:
      - 'main'
    paths:
      - "Dockerfile"
      - "vulnerable-flask-app.py"
jobs:
  scan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: '${{ github.ref_name }}'
          token: ${{ secrets.GITLEAKS }}
          
      - name: Install Gitleaks
        run: |
          curl -sSfl https://github.com/zricethezav/gitleaks/releases/latest/download/gitleaks-linux-amd64 --output gitleaks
          chmod +x gitleaks
          sudo mv gitleaks /usr/local/bin/
          gitleaks --verbose
                
      - name: Install dependencies 
        run: |
          python -m pip install --upgrade pip
          python3 -m pip install semgrep
          if [ -f ./requirements.txt ]; then pip install -r ./requirements.txt; fi

        #scan de du code
      - name: Run Gitleaks Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITLEAKS }}
        run: |
          docker run --rm -v "$(pwd):/code" zricethezav/gitleaks
        
      - name: Install Semgrep
        run: |
          pip install semgrep
        shell: bash
  
      - name: Run Semgrep Scan
        run: |
          semgrep 'vulnerable-flask-app.py'
        working-directory: ${{ github.workspace }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Install Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.tar.gz
          tar zxvf trivy_0.18.3_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/
          trivy --version

      - name: Scan Image with Trivy
        run: |
          trivy image test_${{ github.run_number }}:v1
        working-directory: .
      
      - name: Save Scan Results
        run: |
          trivy image --format json --output trivy_results.json test_${{ github.run_number }}:v1
        working-directory: .

      - name: Build image from Dockerfile
        run: |
          docker build -t test_${{ github.run_number }}:v1 .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Image
        run: |
          docker tag test_${{ github.run_number }}:v1 cxrxl/devsecopslab:v${{ github.run_number }}
          docker push cxrxl/devsecopslab:v${{ github.run_number }}

      - name: Checkout the ENV Repo
        uses: actions/checkout@v3
        with:
          repository: 'cxrxl/labdevsecops'
          ref: 'main'
          token:  ${{ secrets.GITLEAKS}}

      - name: Set up YQ command
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.2.0/yq_linux_amd64.tar.gz -O - | sudo tar xz && sudo mv yq_linux_amd64 /usr/bin/yq
      
      - name: Edit manifests in ENV repo"
        run: |
         yq eval -i '.spec.template.spec.containers[0].image = "cxrxl/devsecopslab:v${{ github.run_number }}"' ./kubernetes/deployment.yaml
      
      - name: Commit and Push to ENV repo
        run: |
          git config  user.email "cynthia.bernal.edu@groupe-gema.com"
          git config  user.name "cxrxl"
          git commit -a -m 'Env file is updated with the new image ${{ github.ref_name }}'
          git push https://${{ secrets.GITLEAKS }}@github.com/cxrxl/labdevsecops.git
